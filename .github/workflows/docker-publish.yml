name: Build and Push Docker Image

on:
  push:
    branches:
    - main
    - develop
    tags:
    - 'v*.*.*'
  pull_request:
    branches:
    - main
  workflow_dispatch:
    inputs:
      tag:
        description: 'Custom tag for the image'
        required: false
        default: 'manual'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: valknarness/awesome-app

jobs:
  build-database:
    uses: ./.github/workflows/db.yml
    secrets: inherit

  build-and-push:
    needs: build-database
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download database artifact
      uses: actions/download-artifact@v4
      with:
        name: awesome-database
        path: ./

    - name: Verify database artifact
      run: |
        ls -lah awesome.db* || echo "No database file found"
        cat db-metadata.json || echo "No metadata file found"

    - name: Extract database metadata
      id: db-meta
      run: |
        if [ -f db-metadata.json ]; then
          echo "db_timestamp=$(jq -r '.timestamp' db-metadata.json)" >> $GITHUB_OUTPUT
          echo "db_hash=$(jq -r '.hash' db-metadata.json)" >> $GITHUB_OUTPUT
          echo "lists_count=$(jq -r '.lists_count' db-metadata.json)" >> $GITHUB_OUTPUT
          echo "repos_count=$(jq -r '.repos_count' db-metadata.json)" >> $GITHUB_OUTPUT
        fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels)
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          # Tag as 'latest' for main branch
          type=raw,value=latest,enable={{is_default_branch}}
          # Tag with branch name
          type=ref,event=branch
          # Tag with PR number
          type=ref,event=pr
          # Tag with git tag (semver)
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          # Tag with commit SHA
          type=sha,prefix={{branch}}-
          # Custom tag from workflow_dispatch
          type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event_name == 'workflow_dispatch' }}
        labels: |
          org.opencontainers.image.title=awesome-app
          org.opencontainers.image.description=Next.js application for exploring awesome lists
          org.opencontainers.image.vendor=valknarness
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          app.database.timestamp=${{ steps.db-meta.outputs.db_timestamp }}
          app.database.hash=${{ steps.db-meta.outputs.db_hash }}
          app.database.lists_count=${{ steps.db-meta.outputs.lists_count }}
          app.database.repos_count=${{ steps.db-meta.outputs.repos_count }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          NODE_ENV=production
          INCLUDE_DATABASE=false

    - name: Generate image digest
      if: github.event_name != 'pull_request'
      run: |
        echo "### Docker Image Published :rocket:" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Registry:** \`${{ env.REGISTRY }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Image:** \`${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Database Info:**" >> $GITHUB_STEP_SUMMARY
        echo "- Built: ${{ steps.db-meta.outputs.db_timestamp }}" >> $GITHUB_STEP_SUMMARY
        echo "- Lists: ${{ steps.db-meta.outputs.lists_count }}" >> $GITHUB_STEP_SUMMARY
        echo "- Repositories: ${{ steps.db-meta.outputs.repos_count }}" >> $GITHUB_STEP_SUMMARY
        echo "- Hash: \`${{ steps.db-meta.outputs.db_hash }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Pull command:**" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

    - name: PR Comment - Image built but not pushed
      if: github.event_name == 'pull_request'
      run: |
        echo "### Docker Image Built Successfully :white_check_mark:" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Image was built successfully but **not pushed** (PR builds are not published)." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Would be tagged as:**" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
